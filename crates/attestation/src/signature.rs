use ed25519_compact::{KeyPair, Noise, PublicKey, SecretKey, Seed, Signature};
pub type DevicePublicKey = PublicKey;
pub type DevicePrivateKey = SecretKey;
pub type AttestationPublicKey = PublicKey;
pub type AttestationPrivateKey = SecretKey;

pub type AttestationSignature = Signature;



pub const MAX_ATTESTATION_DATA_SZ: usize = 8;
pub const ATTESTATION_DATA_SZ: usize = MAX_ATTESTATION_DATA_SZ + 32;

//TPM-added size constants
pub const TPM_ATTESTATION_SZ: usize = 129;
pub const TPM_SIG_SZ: usize = 384;
pub const TPM_MODULUS_SZ: usize = 384;
pub const ATTESTATION_TOTAL_SZ: usize = ATTESTATION_DATA_SZ + TPM_ATTESTATION_SZ + TPM_SIG_SZ + TPM_MODULUS_SZ;


//TPM-added types
pub type TpmSignature = [u8; TPM_SIG_SZ];
pub type TpmModulus = [u8; TPM_MODULUS_SZ];
pub type TpmAttestation = [u8; TPM_ATTESTATION_SZ];

//TPM hardcoded signature stuff

pub const TPM_HARDCODED_ATTESTATION: TpmAttestation = [255, 84, 67, 71, 128, 24, 0, 34, 0, 11, 80, 132, 36, 27, 88, 170, 115, 235, 231, 151, 186, 230, 214, 210, 41, 40, 237, 163, 65, 71, 193, 55, 178, 57, 30, 54, 46, 99, 178, 135, 85, 56, 0, 0, 0, 0, 0, 0, 4, 238, 45, 107, 73, 174, 113, 112, 232, 84, 250, 204, 1, 59, 50, 125, 224, 230, 169, 28, 239, 0, 0, 0, 1, 0, 11, 3, 0, 0, 2, 0, 48, 88, 196, 63, 92, 118, 101, 35, 237, 112, 212, 158, 168, 175, 251, 67, 127, 57, 21, 220, 151, 227, 39, 53, 22, 71, 219, 120, 126, 71, 58, 240, 143, 19, 224, 171, 97, 107, 221, 8, 2, 66, 197, 146, 81, 61, 170, 67, 239];

pub const TPM_HARDCODED_SIGNATURE: TpmSignature = [125, 95, 19, 204, 84, 51, 178, 191, 8, 242, 65, 100, 230, 17, 210, 69, 17, 195, 13, 34, 74, 97, 254, 221, 4, 45, 255, 17, 43, 105, 118, 15, 180, 184, 195, 248, 58, 183, 244, 78, 76, 235, 7, 55, 27, 96, 179, 101, 168, 59, 238, 164, 24, 2, 112, 152, 226, 82, 39, 72, 39, 67, 0, 31, 194, 119, 60, 27, 185, 23, 174, 102, 138, 184, 221, 250, 188, 69, 188, 233, 246, 186, 243, 65, 1, 193, 128, 161, 226, 81, 27, 238, 255, 159, 119, 63, 121, 174, 67, 22, 92, 181, 129, 156, 53, 125, 110, 26, 181, 56, 213, 100, 154, 231, 120, 171, 89, 72, 56, 47, 202, 209, 54, 68, 165, 31, 91, 55, 128, 117, 139, 242, 21, 168, 3, 121, 84, 227, 65, 8, 186, 16, 86, 122, 64, 199, 2, 36, 85, 61, 178, 134, 116, 205, 160, 170, 15, 34, 223, 109, 69, 49, 164, 248, 200, 17, 38, 191, 1, 232, 115, 19, 108, 218, 133, 162, 174, 90, 213, 81, 242, 28, 65, 65, 191, 67, 153, 142, 110, 156, 106, 182, 149, 193, 50, 48, 27, 246, 43, 247, 85, 174, 6, 7, 50, 49, 122, 41, 85, 202, 207, 194, 35, 140, 237, 34, 144, 37, 215, 11, 42, 198, 250, 67, 153, 89, 99, 73, 112, 71, 212, 95, 248, 35, 76, 198, 146, 175, 89, 194, 142, 158, 240, 48, 204, 25, 175, 5, 214, 228, 108, 235, 20, 87, 99, 58, 245, 31, 58, 87, 18, 232, 76, 100, 142, 244, 223, 47, 13, 60, 54, 251, 36, 110, 152, 15, 30, 216, 24, 95, 246, 203, 101, 127, 5, 254, 219, 205, 206, 82, 206, 32, 94, 29, 243, 145, 221, 201, 201, 33, 43, 124, 202, 168, 170, 15, 169, 201, 229, 210, 209, 203, 150, 193, 114, 27, 27, 169, 64, 43, 224, 159, 162, 62, 86, 10, 121, 239, 41, 207, 129, 193, 20, 33, 13, 89, 115, 154, 177, 104, 254, 150, 235, 236, 192, 153, 195, 215, 217, 110, 120, 190, 25, 217, 125, 153, 8, 117, 8, 151, 1, 163, 68, 138, 199, 45, 120, 170, 210, 114, 146, 166, 91, 254, 109, 246, 113, 250, 59, 95, 68, 171, 222, 180];

pub const TPM_HARDCODED_MODULUS: TpmModulus =  [168, 190, 1, 111, 78, 154, 163, 35, 75, 141, 234, 208, 2, 217, 137, 47, 3, 119, 55, 69, 215, 144, 13, 34, 174, 110, 149, 99, 34, 182, 101, 173, 40, 171, 37, 71, 71, 15, 16, 215, 196, 0, 213, 4, 145, 140, 171, 198, 233, 190, 45, 213, 122, 57, 18, 120, 113, 213, 236, 100, 8, 89, 239, 16, 63, 42, 148, 24, 95, 52, 159, 45, 173, 55, 26, 186, 207, 74, 2, 119, 126, 75, 18, 187, 70, 60, 133, 98, 99, 74, 217, 45, 98, 36, 118, 244, 198, 109, 247, 199, 187, 205, 236, 72, 2, 224, 33, 64, 236, 167, 187, 228, 75, 25, 71, 111, 222, 118, 157, 4, 28, 247, 54, 200, 130, 52, 21, 216, 130, 134, 204, 249, 88, 201, 192, 218, 180, 186, 188, 16, 136, 6, 219, 220, 35, 6, 145, 149, 128, 44, 210, 206, 240, 178, 192, 190, 166, 20, 233, 61, 13, 12, 233, 95, 58, 156, 89, 255, 22, 66, 30, 82, 155, 19, 60, 77, 145, 65, 159, 89, 143, 193, 60, 45, 163, 214, 62, 224, 203, 157, 245, 228, 243, 252, 205, 229, 130, 99, 101, 235, 197, 128, 163, 216, 2, 163, 3, 213, 221, 156, 149, 102, 43, 51, 204, 140, 245, 101, 60, 116, 225, 137, 29, 214, 136, 71, 113, 23, 94, 5, 134, 32, 163, 206, 13, 5, 140, 159, 82, 89, 29, 221, 212, 123, 125, 182, 107, 120, 4, 197, 253, 214, 49, 143, 204, 35, 168, 116, 177, 152, 124, 108, 227, 154, 72, 43, 62, 249, 5, 52, 178, 240, 87, 86, 138, 0, 146, 97, 26, 222, 89, 212, 211, 65, 241, 11, 129, 50, 43, 226, 245, 87, 78, 209, 67, 43, 229, 250, 113, 119, 35, 83, 51, 171, 101, 45, 53, 250, 30, 19, 177, 9, 113, 203, 169, 205, 213, 122, 237, 24, 182, 122, 46, 120, 233, 27, 150, 173, 165, 153, 154, 9, 166, 223, 124, 40, 141, 79, 165, 87, 99, 5, 74, 234, 76, 111, 70, 207, 123, 112, 180, 80, 80, 154, 251, 244, 63, 128, 249, 2, 224, 34, 201, 179, 216, 26, 192, 94, 230, 152, 168, 242, 112, 144, 7, 118, 34, 73, 61, 97, 137, 87, 92, 41];


#[cfg(target_arch = "riscv64")]
#[derive(Copy, Clone, Debug)]
pub struct EnclaveReport {
    pub public_key: PublicKey, //32 bytes
    pub signed_enclave_data: AttestationSignature, //64 bytes
    pub tpm_signature: TpmSignature, //384
    pub tpm_modulus: TpmModulus, //384
    pub tpm_attestation: TpmAttestation, //129
}

#[cfg(target_arch = "x86_64")]
#[derive(Copy, Clone, Debug)]
pub struct EnclaveReport {
    pub public_key: PublicKey,
    pub signed_enclave_data: AttestationSignature,
}

pub fn get_attestation_keys() -> (AttestationPublicKey, AttestationPrivateKey) {
    let key_pair = KeyPair::from_seed(Seed::default());
    (key_pair.pk, key_pair.sk)
}

pub fn sign_attestation_data(data: &[u8], key: AttestationPrivateKey) -> AttestationSignature {
    let sig = key.sign(data, Some(Noise::default()));
    sig
}

pub fn sign_by_device(data: &[u8], key: DevicePrivateKey) -> AttestationSignature {
    let sig = key.sign(data, Some(Noise::default()));
    sig
}

